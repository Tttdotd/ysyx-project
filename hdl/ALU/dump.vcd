$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  4 ( a [3:0] $end
  $var wire  4 ) b [3:0] $end
  $var wire  3 * op [2:0] $end
  $var wire  4 + out [3:0] $end
  $scope module top $end
   $var wire  4 ( a [3:0] $end
   $var wire  4 ) b [3:0] $end
   $var wire  4 0 b_ [3:0] $end
   $var wire  1 ' cin $end
   $var wire  3 * op [2:0] $end
   $var wire  4 + out [3:0] $end
   $var wire  4 # result_add [3:0] $end
   $var wire  4 - result_and [3:0] $end
   $var wire  4 % result_equal [3:0] $end
   $var wire  4 $ result_little [3:0] $end
   $var wire  4 , result_not [3:0] $end
   $var wire  4 . result_or [3:0] $end
   $var wire  4 / result_xor [3:0] $end
   $var wire  1 & zero $end
   $scope module add $end
    $var wire  4 ( a [3:0] $end
    $var wire  4 0 b [3:0] $end
    $var wire  1 ' cin $end
    $var wire  4 # result [3:0] $end
    $var wire  1 & zero $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b1010 #
b0001 $
b0000 %
0&
0'
b1000 (
b0010 )
b000 *
b1010 +
b0111 ,
b0000 -
b1010 .
b1010 /
b0010 0
#2
b0110 #
b0000 $
1'
b001 *
b0110 +
b1101 0
#3
b1010 #
b0001 $
0'
b010 *
b0111 +
b0010 0
#4
b011 *
b0000 +
#5
b100 *
b1010 +
#6
b101 *
#7
b0110 #
b0000 $
1'
b110 *
b0000 +
b1101 0
#8
b111 *
#9
